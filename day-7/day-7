#  #----- 행맨 -----


# #----- Step 1 -----

# # TODO-1 - Randomly choose a word from the word_list and assign it to a variable called chosen_word. Then print it.
# import random
# word_list = ["aardvark", "baboon", "camel"]

# chosen_word = random.choice(word_list)
# print(chosen_word)

# # TODO-2 - Ask the user to guess a letter and assign their answer to a variable called guess. Make guess lowercase.
# guess = input("Guess a letter : ").lower()


# # TODO-3 - Check if the letter the user guessed (guess) is one of the letters in the chosen_word. Print "Right" if it is "Wrong" if it's not.
# for letter in chosen_word:
#     if letter == guess:
#         print("Right")
#     else:
#         print("Wrong")


# #----- Step 2 -----

# import random
# word_list = ["aardvark", "baboon", "camel"]

# chosen_word = random.choice(word_list)
# print(chosen_word)

# # TODO-1: Create a "placeholder" with the same number of blanks as the chosen_word

# placeholder = ""
# word_length = len(chosen_word)
# for n in range(word_length):
#     placeholder += "_"

# print(placeholder)

# guess = input("Guess a letter : ").lower()

# # TODO-2: Create a "display" that puts the guess letter in the right positions and _ in the rest of the string.

# display = ""
# for letter in chosen_word:
#     if letter == guess:
#        display += letter
#     else:
#         display += "_"

# print(display)


# #----- Step3 -----
# import random
# word_list = ["aardvark", "baboon", "camel"]

# chosen_word = random.choice(word_list)
# print(chosen_word)


# placeholder = ""
# word_length = len(chosen_word)
# for n in range(word_length):
#     placeholder += "_"

# print(placeholder)

# # TODO-1: - Use a while loop to let the user guess again.

# game_over = False
# correct_letters = []

# while not game_over:
#     guess = input("Guess a letter : ").lower()

#     display = ""

#     # TODO-2: Change the for loop so that you keep the previos correct letters in display.

#     for letter in chosen_word:
#         if letter == guess:
#             display += letter
#             correct_letters.append(guess)
#         elif letter in correct_letters:
#             display += letter
#         else:
#             display += "_"

#     print(display)

#     if "_" not in display:
#         game_over = True
#         print("You win.") 


# #----- Step4 -----
# import random

# stages = ['''
#   +---+
#   |   |
#   O   |
#  /|\  |
#  / \  |
#       |
# =========
# ''', '''
#   +---+
#   |   |
#   O   |
#  /|\  |
#  /    |
#       |
# =========
# ''', '''
#   +---+
#   |   |
#   O   |
#  /|\  |
#       |
#       |
# =========
# ''', '''
#   +---+
#   |   |
#   O   |
#  /|   |
#       |
#       |
# =========
# ''', '''
#   +---+
#   |   |
#   O   |
#   |   |
#       |
#       |
# =========
# ''', '''
#   +---+
#   |   |
#   O   |
#       |
#       |
#       |
# =========
# ''', '''
#   +---+
#   |   |
#       |
#       |
#       |
#       |
# =========
# ''']

# word_list = ["aardvark", "baboon", "camel"]

# # TODO-1: Create a variable called 'lives' to keep track of the number of lives left.
# # Set 'lives' to equal 6.
# lives = 6

# chosen_word = random.choice(word_list)
# print(chosen_word)


# placeholder = ""
# word_length = len(chosen_word)
# for n in range(word_length):
#     placeholder += "_"

# print(placeholder)


# game_over = False
# correct_letters = []

# while not game_over:
#     guess = input("Guess a letter : ").lower()

#     display = ""


#     for letter in chosen_word:
#         if letter == guess:
#             display += letter
#             correct_letters.append(guess)
#         elif letter in correct_letters:
#             display += letter
#         else:
#             display += "_"

#     print(display)

#     # TODO-2: - If guess is not a letter in the chosen_word, Then reduce 'lives' by 1.
#     # If lives goes down to 0 then the game should stop and it should print "You lose."
#     if guess not in chosen_word:
#         lives -= 1
#         if lives == 0:
#             game_over = True
#             print("You lose.")

#     if "_" not in display:
#         game_over = True
#         print("You win.")

#     # TODO-3: - print the ASCII art from 'stages'
#     # that corresponds to the current number of 'lives; the user has remaining.
#     print(stages[lives])


# #----- Step5 -----
# import random

# # TODO-1: - Update the word list to use the 'word_list' from hangman_words.py
# from hangman_words import word_list
# from hangman_art import stages, logo

# lives = 6

# # TODO-3 : -Import the logo from hangman_art.py and print it at the start of the game.
# print(logo)

# chosen_word = random.choice(word_list)
# #print(chosen_word)


# placeholder = ""
# word_length = len(chosen_word)
# for n in range(word_length):
#     placeholder += "_"

# print(placeholder)


# game_over = False
# correct_letters = []

# while not game_over:
#     # TODO-6: -Update the code below to tell the user how many lives they have left.
#     print(f"{lives}/6")
#     guess = input("Guess a letter : ").lower()

#     # TODO-4: - If the user has entered a letter they've already guessed, print  the letter and let them know.
#     if guess in correct_letters:
#         print(f"You've already guessed {guess}")

#     display = ""


#     for letter in chosen_word:
#         if letter == guess:
#             display += letter
#             correct_letters.append(guess)
#         elif letter in correct_letters:
#             display += letter
#         else:
#             display += "_"

#     print("Word to guess: " + display)

#     # TODO-5: - If the letter is not in the chosen_word, print out the letter and let them know it's not in the word.


#     if guess not in chosen_word:
#         lives -= 1
#         print(f"You guessed {guess}, that's not in the word. You lose a life.")
#         if lives == 0:
#             game_over = True

#             # TODO-7: - Update the print statement below to give the user the correct word they were trying to guess.
#             print(f"It was {chosen_word}. You lose.")

#     if "_" not in display:
#         game_over = True
#         print("You win.")

    
#     # TODO-2: - Update the code below to use the stages List from the file hangman_art.py
#     print(stages[lives])


#----- 행맨게임 -----
import random
from hangman_words import word_list
from hangman_art import stages, logo

lives = 6

print(logo)

chosen_word = random.choice(word_list)
#print(chosen_word)


placeholder = ""
word_length = len(chosen_word)
for n in range(word_length):
    placeholder += "_"

print(placeholder)


game_over = False
correct_letters = []

while not game_over:
    print(f"{lives}/6")
    guess = input("Guess a letter : ").lower()

    if guess in correct_letters:
        print(f"You've already guessed {guess}")

    display = ""


    for letter in chosen_word:
        if letter == guess:
            display += letter
            correct_letters.append(guess)
        elif letter in correct_letters:
            display += letter
        else:
            display += "_"

    print("Word to guess: " + display)


    if guess not in chosen_word:
        lives -= 1
        print(f"You guessed {guess}, that's not in the word. You lose a life.")
        if lives == 0:
            game_over = True
            print(f"It was {chosen_word}. You lose.")

    if "_" not in display:
        game_over = True
        print("You win.")

    
    print(stages[lives])
